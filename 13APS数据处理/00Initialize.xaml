<Activity mc:Ignorable="sap sap2010 sads" x:Class="Initialize"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SuccessFlagArg" Type="OutArgument(x:Boolean)" />
    <x:Property Name="ConfigSystemArg" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="NoFilesListArg" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>zzzz_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="successFlag" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <Sequence DisplayName="Initialize" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new dictionary(of string,string)]" Name="dictionary" />
          <Variable x:TypeArguments="x:String" Name="pathCurrentDirectory">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="noFilesList">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
        </Sequence.Variables>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="Initialize Begin" />
        <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill process" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel" />
        <Sequence DisplayName="BuildSystemDictionary" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="dtSystemDictionary" />
          </Sequence.Variables>
          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope(建立系统数据字典)" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" Visible="False" WorkbookPath="Config.xlsx">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dtSystemDictionary]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="A1" SheetName="Config" />
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
          <If Condition="[dtSystemDictionary.DefaultView.ToTable(True,&quot;Key&quot;).Rows.Count&lt;dtSystemDictionary.Rows.Count]" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <Throw Exception="[new exception(&quot;Key值有重复，重复数量至少&quot;+(dtSystemDictionary.Rows.Count-dtSystemDictionary.DefaultView.ToTable(True,&quot;Key&quot;).Rows.Count+1).ToString+&quot;个，请检查&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </If.Then>
          </If>
          <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[dtSystemDictionary.Rows]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[dictionary]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="[row(&quot;Key&quot;).ToString]" Value="[row(&quot;Value&quot;).ToString]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;The number of keys in the dictionary---&gt;&quot;+dictionary.Keys.Count.ToString]" />
        </Sequence>
        <Sequence DisplayName="CreateDirectory" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:List(x:String)" Default="[new list(of string)]" Name="directoryList" />
            <Variable x:TypeArguments="sd:DataTable" Default="[new datatable()]" Name="dtDirectoryList" />
          </Sequence.Variables>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[pathCurrentDirectory]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[System.Environment.CurrentDirectory.ToString+"\"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope（创建文件夹）" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="Config.xlsx">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dtdirectoryList]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A1" SheetName="Folder" />
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
          <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[dtdirectoryList.Rows]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <If Condition="[row(&quot;FolderName&quot;).ToString.Trim=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Else>
                    <AddToCollection x:TypeArguments="x:String" Collection="[directoryList]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[row(&quot;FolderName&quot;).ToString]" />
                  </If.Else>
                </If>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <If Condition="[Directory.Exists(pathCurrentDirectory+directoryList(0))]" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="There is no need to initialize the directory." />
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[directoryList]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <ui:CreateDirectory ContinueOnError="True" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_9" Path="[item]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;Number of directories---&gt;&quot;+directoryList.Count.ToString]" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
        <Sequence DisplayName="CopyGeneralFile(将公用的xaml复制到当前目录下)" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Default="[new datatable()]" Name="dtInvokeFileList" />
            <Variable x:TypeArguments="scg:List(x:String)" Default="[new list(of string)]" Name="invokeFileList" />
          </Sequence.Variables>
          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" Visible="False" WorkbookPath="Config.xlsx">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[dtInvokeFileList]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="A1" SheetName="GeneralFile" />
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
          <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[dtInvokeFileList.Rows]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <If Condition="[row(&quot;FileName&quot;).ToString.Trim=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Else>
                    <AddToCollection x:TypeArguments="x:String" Collection="[invokeFileList]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[row(&quot;FileName&quot;).ToString]" />
                  </If.Else>
                </If>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[invokeFileList]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <If Condition="[file.Exists(dictionary(&quot;directorySharedDrive&quot;)+dictionary(&quot;folderGeneralCode&quot;)+item)]" sap2010:WorkflowViewState.IdRef="If_8">
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <ui:Delete ContinueOnError="True" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[pathCurrentDirectory+item]" />
                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[pathCurrentDirectory+item]" DisplayName="Copy file" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="[dictionary(&quot;directorySharedDrive&quot;)+dictionary(&quot;folderGeneralCode&quot;)+item]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;No source code files:&quot;+dictionary(&quot;directorySharedDrive&quot;)+dictionary(&quot;folderGeneralCode&quot;)+item]" />
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[noFilesList]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[noFilesList+item+";"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;No source code files---&gt;&quot;+noFilesList]" />
          <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Nunber of source code files---&gt;&quot;+invokeFileList.Count.ToString]" />
        </Sequence>
        <Sequence DisplayName="CopyUserConfig（将共享盘中userConfig目录下的文件复制到当前目录下）" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <If Condition="[directory.Exists(dictionary(&quot;directorySharedDrive&quot;)+dictionary(&quot;folderProcess&quot;)+dictionary(&quot;folderInput&quot;)+dictionary(&quot;folderUserConfig&quot;))]" sap2010:WorkflowViewState.IdRef="If_9">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                <ui:Delete ContinueOnError="True" sap2010:WorkflowViewState.IdRef="Delete_3" Path="[pathCurrentDirectory+&quot;04Config\&quot;]" />
                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_11" Path="[pathCurrentDirectory+&quot;04Config\&quot;]" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="File_M_003_CopyFile.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="DirectoryOriginalArg">[dictionary("directorySharedDrive")+dictionary("folderProcess")+dictionary("folderInput")+dictionary("folderUserConfig")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="DirectoryTargetArg">[pathCurrentDirectory+"04Config\"]</InArgument>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="SuccessFlagArg">[successFlag]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;User config path---&gt;&quot;+pathCurrentDirectory+&quot;04Config\&quot;+dictionary(&quot;fileUserConfig&quot;)]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Throw Exception="[new exception(&quot;There is no user config file&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
            </If.Else>
          </If>
        </Sequence>
        <Sequence DisplayName="CopyInputFile" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[pathCurrentDirectory+&quot;01Source\&quot;]" />
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_10" Path="[pathCurrentDirectory+&quot;01Source\&quot;]" />
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="File_M_003_CopyFile.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="DirectoryOriginalArg">[dictionary("directorySharedDrive")+dictionary("folderProcess")+dictionary("folderInput")]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="DirectoryTargetArg">[pathCurrentDirectory+"01Source\"]</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="SuccessFlagArg">[successFlag]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <If Condition="[successFlag]" sap2010:WorkflowViewState.IdRef="If_11">
            <If.Else>
              <Throw Exception="[new exception(&quot;Copy input file error&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_4" />
            </If.Else>
          </If>
          <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_6" Path="[pathCurrentDirectory+&quot;01Source\&quot;+dictionary(&quot;folderUserConfig&quot;)]" />
        </Sequence>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[ConfigSystemArg]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictionary]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[NoFilesListArg]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[noFilesList]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[successFlag]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[SuccessFlagArg]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[successFlag]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="Initialize End" />
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[successFlag]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[SuccessFlagArg]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[successFlag]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Initialize Error&quot;+exception.ToString]" />
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="674,95" />
      <sap2010:ViewStateData Id="KillProcess_1" sap:VirtualizedContainerService.HintSize="674,22" />
      <sap2010:ViewStateData Id="ExcelReadRange_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelApplicationScope_3" sap:VirtualizedContainerService.HintSize="464,168" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,213" />
      <sap2010:ViewStateData Id="AddToDictionary`2_1" sap:VirtualizedContainerService.HintSize="382,141" />
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="464,278">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="464,63" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="674,966">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="652,61" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="652,168" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,213" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="652,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,95" />
      <sap2010:ViewStateData Id="CreateDirectory_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="291,283" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="291,63" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="313,510">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="652,663" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="674,1486">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelApplicationScope_2" sap:VirtualizedContainerService.HintSize="621,168" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,213" />
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="621,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyFile_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,95" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,320">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="583,473" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="605,597">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="621,734" />
      <sap2010:ViewStateData Id="WriteLine_5" sap:VirtualizedContainerService.HintSize="621,63" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="621,63" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="674,1662">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="CreateDirectory_11" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WriteLine_6" sap:VirtualizedContainerService.HintSize="314,63" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="336,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="561,591" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="674,715">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_5" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="CreateDirectory_10" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="Throw_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,213" />
      <sap2010:ViewStateData Id="Delete_6" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="674,650">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="674,61" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="674,61" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="674,61" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="674,61" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="674,95" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="696,6499">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,95" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,414">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="700,23">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="714,8376" />
      <sap2010:ViewStateData Id="zzzz_1" sap:VirtualizedContainerService.HintSize="754,10096" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>