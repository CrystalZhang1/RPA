<Activity mc:Ignorable="sap sap2010 sads" x:Class="File_M_001_Archive" this:File_M_001_Archive.DirectoryOriginalArg="[new list(of string)]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SuccessFlagArg" Type="OutArgument(x:Boolean)" />
    <x:Property Name="DirectoryTargetArg" Type="InArgument(x:String)" />
    <x:Property Name="DirectoryOriginalArg" Type="InArgument(scg:List(x:String))" />
  </x:Members>
  <this:File_M_001_Archive.DirectoryTargetArg>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:File_M_001_Archive.DirectoryTargetArg>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Archive_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="successFlag" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <Sequence sap2010:Annotation.AnnotationText="Invoke code：File_002_MoveFile.xaml&#xA;Introduction：Create a folder based on timestamp in the target folder and archive the original source folder.&#xA;Matters needing attention：The incoming path parameter needs to be a list type, the object type in list is string, and the number of objects is unlimited.&#xA;Author：Carlos Song &lt;Carlos.Song@cn.ey.com&gt;" DisplayName="Archive" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:List(x:String)" Default="[new list(of string)]" Name="directoryOriginal" />
          <Variable x:TypeArguments="x:String" Name="directoryTarget">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="dateTime">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
        </Sequence.Variables>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="File_M_001_Archive Begin" />
        <Sequence DisplayName="Sequnence" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[dateTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[date.Now.ToString("yyyyMMdd-HHmmss")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[directoryOriginal]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[DirectoryOriginalArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[directoryTarget]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[DirectoryTargetArg+dateTime]</InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;archiveTargetDirectory---&gt;&quot;+DirectoryTarget]" />
          <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;directoryOriginal.Count---&gt;&quot;+directoryOriginal.Count.ToString]" />
        </Sequence>
        <If Condition="[directory.Exists(directoryTargetArg)]" sap2010:WorkflowViewState.IdRef="If_11">
          <If.Else>
            <Throw Exception="[New exception(&quot;Dest path not exist: &quot;+directoryTarget)]" sap2010:WorkflowViewState.IdRef="Throw_9" />
          </If.Else>
        </If>
        <If Condition="[directoryOriginal.Count=0]" sap2010:WorkflowViewState.IdRef="If_10">
          <If.Then>
            <Throw Exception="[New exception(&quot;DirectoryOriginalArg is empty&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_7" />
          </If.Then>
        </If>
        <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[directoryOriginal]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="folderName">
                    <Variable.Default>
                      <Literal x:TypeArguments="x:String" Value="" />
                    </Variable.Default>
                  </Variable>
                </Sequence.Variables>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[item.Split({"\"c})(Integer.Parse(item.Split({"\"c}).Length.ToString)-2)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[DirectoryTarget+&quot;\&quot;+folderName]" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="File_M_002_MoveFile.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="DirectoryTargetArg">[DirectoryTarget+"\"+folderName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="DirectoryOriginalArg">[item]</InArgument>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="SuccessFlagArg">[successFlag]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <If Condition="[successFlag]" sap2010:WorkflowViewState.IdRef="If_12">
                  <If.Else>
                    <Throw Exception="[New exception(&quot;F_002_MoveFile Error&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_10" />
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[successFlag]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[SuccessFlagArg]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[successFlag]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="File_M_001_Archive End" />
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Sequnence" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[successFlag]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[SuccessFlagArg]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[successFlag]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;File_M_001_Archive Error&quot;+exception.ToString]" />
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <sads:DebugSymbol.Symbol>dztDOlxaUVJQQVxaUVJQQVwwNOmHh+i0reS7mOasvuWHreivgVxGaWxlX01fMDAxX0FyY2hpdmUueGFtbEMVBxU2AQMBdQGLAQECTQPeAQ4CAQFPNU87AgEPUge/ARICARDHAQvZARYCAQJUQlRZAgETVw9XPgIBElwPXD4CARFgCWCTAQIBW2EJfBQCAUV9CYEBDgIBQYIBCYYBDgIBPIcBCa0BFgIBH64BCbUBEgIBG7YBCb0BEgIBFr4BCb4BkQECARTIAQ3PARYCAQvQAQ3XARYCAQbYAQ3YAbkBAgEDYHZgkAECAVxiC2kUAgFXagtxFAIBUnILeRQCAUx6C3qiAQIBSXsLe7QBAgFGfRd9PwIBQn8Nf48BAgFDggEXggE0AgE9hAENhAGHAQIBP4cBfIcBkQECATqNAQ+qARoCASCzATWzATkCAR6wATawAUMCARy7ATW7AUICARm4ATa4AUYCARe+AXa+AY4BAgEVzQE5zQE+AgEOygE6ygFHAgEM1QE51QFGAgEJ0gE60gFKAgEH2AF72AG2AQIBBGc2Z1wCAVpkN2RBAgFYb0BvVgIBVWxBbFQCAVN3NndTAgFPdDd0SAIBTXpiep8BAgFKe2J7sQECAUd/Hn9iAgFEhAEehAFaAgFAkQEXkQFGAgEhlQERnAEaAgE0nQERnQHHAQIBMJ4BEaQBKQIBJ6UBEakBFgIBIpoBPJoBhQECATeXAT2XAUkCATWdAZgBnQHEAQIBMaABV6ABdwIBLaIBVaIBYgIBK6EBWaEBXwIBKZ4BvgGeAdgBAgEopQEfpQEuAgEjpwEVpwGHAQIBJacBJqcBWQIBJg==</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="502,95" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="242,61" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="242,61" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="502,589">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="502,208" />
      <sap2010:ViewStateData Id="Throw_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="502,208" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="Throw_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="486,621">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="502,755" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="502,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="524,2584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="490,484">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="542,3386" />
      <sap2010:ViewStateData Id="Archive_1" sap:VirtualizedContainerService.HintSize="582,3466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>