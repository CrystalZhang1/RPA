<Activity mc:Ignorable="sap sap2010 sads" x:Class="CapitalPlanExcel" this:CapitalPlanExcel.NameCashPaymentHeaderArg="现金支付" this:CapitalPlanExcel.NameBillsPaymentHeaderArg="票据支付" this:CapitalPlanExcel.NameLoanPaymentHeaderArg="贷款支付" this:CapitalPlanExcel.NamePenaltyHeaderArg="扣款金额" this:CapitalPlanExcel.NameStatusHeaderArg="是否付款" this:CapitalPlanExcel.NameReferenceHeaderArg="来源单号" this:CapitalPlanExcel.NameAmountHeaderArg="本币金额" this:CapitalPlanExcel.PathCapitalPlanExcelArg="C:\宋帅峰\201801智奇铁路RPA\07代码文件\ZQRPA\ZQRPA\04采购付款凭证\02Process\2018年04月资金支付计划.xlsx" this:CapitalPlanExcel.NameCapitalPlanSheetArg="费用" this:CapitalPlanExcel.RangeCapitalPlanSheetArg="A2" this:CapitalPlanExcel.NameFinalAmountArg="最终付款金额" this:CapitalPlanExcel.NameNetentionAmountHeaderArg="滞留本币金额" this:CapitalPlanExcel.NameVendorNameHeaderArg="收支对象名称" this:CapitalPlanExcel.NameVendorCodeHeaderArg="收支对象编号"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="NameCashPaymentHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="NameBillsPaymentHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="NameLoanPaymentHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="NamePenaltyHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="NameStatusHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="NameReferenceHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="NameAmountHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="PathCapitalPlanExcelArg" Type="InArgument(x:String)" />
    <x:Property Name="NameCapitalPlanSheetArg" Type="InArgument(x:String)" />
    <x:Property Name="RangeCapitalPlanSheetArg" Type="InArgument(x:String)" />
    <x:Property Name="SuccessFlagArg" Type="OutArgument(x:Boolean)" />
    <x:Property Name="DTVendorListNewArg" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="DTPAListNewArg" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="NameFinalAmountArg" Type="InArgument(x:String)" />
    <x:Property Name="NameNetentionAmountHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="NameVendorNameHeaderArg" Type="InArgument(x:String)" />
    <x:Property Name="NameVendorCodeHeaderArg" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CapitalPanExcel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="successFlag" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <Sequence DisplayName="CapitalPlanExcel" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="pathCapitalPlan">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="nameCapitalPlanSheet">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="rangeCapitalPlanSheet">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="sd:DataTable" Default="[new datatable()]" Name="dtCapitalPlan" />
          <Variable x:TypeArguments="sd:DataTable" Default="[new datatable()]" Name="dtVendorList" />
          <Variable x:TypeArguments="x:String" Name="nameVendorCodeHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:Int32" Default="0" Name="vendorCount" />
          <Variable x:TypeArguments="x:String" Name="nameCashPaymentHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="nameBillsPaymentHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="nameLoanPaymentHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="namePenaltyHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="nameStatusHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="nameReferenceHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="nameAmountHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:Double" Default="0" Name="dblCashPayment" />
          <Variable x:TypeArguments="x:Double" Default="0" Name="dblBillsPayment" />
          <Variable x:TypeArguments="x:Double" Default="0" Name="dblLoanPayment" />
          <Variable x:TypeArguments="x:Double" Default="0" Name="dblPenalty" />
          <Variable x:TypeArguments="sd:DataTable" Default="[new datatable()]" Name="dtVendorListNew" />
          <Variable x:TypeArguments="sd:DataTable" Default="[new datatable()]" Name="dtPAList" />
          <Variable x:TypeArguments="x:Double" Default="0" Name="dblAmount" />
          <Variable x:TypeArguments="sd:DataTable" Default="[new datatable()]" Name="dtPAListNew" />
          <Variable x:TypeArguments="x:Double" Default="0" Name="totalVendorAmount" />
          <Variable x:TypeArguments="x:Double" Default="0" Name="totalPAAmount" />
          <Variable x:TypeArguments="x:String" Name="nameFinalAmount">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="nameNetentionAmountHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="newName" />
          <Variable x:TypeArguments="x:String" Name="newValue2">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="newValue1">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="newValue3">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="nameVendorNameHeader">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="newName1">
            <Variable.Default>
              <Literal x:TypeArguments="x:String" Value="" />
            </Variable.Default>
          </Variable>
          <Variable x:TypeArguments="x:String" Name="qwe" />
        </Sequence.Variables>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="4.1CapitalPlanExcel Begin" />
        <Sequence DisplayName="Prepare" sap2010:WorkflowViewState.IdRef="Sequence_78">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[pathCapitalPlan]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[PathCapitalPlanExcelArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameCapitalPlanSheet]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameCapitalPlanSheetArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[rangeCapitalPlanSheet]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[RangeCapitalPlanSheetArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameVendorCodeHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameVendorCodeHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_244">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameVendorNameHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameVendorNameHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameCashPaymentHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameCashPaymentHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameBillsPaymentHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameBillsPaymentHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameLoanPaymentHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameLoanPaymentHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[namePenaltyHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NamePenaltyHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameStatusHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameStatusHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameReferenceHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameReferenceHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameAmountHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameAmountHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_185">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameFinalAmount]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameFinalAmountArg]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_207">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[nameNetentionAmountHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NameNetentionAmountHeaderArg]</InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;付款类型----&gt;&quot;+nameCapitalPlanSheet]" />
        </Sequence>
        <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="[pathCapitalPlan]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[dtCapitalPlan]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="[rangeCapitalPlanSheet]" SheetName="[nameCapitalPlanSheet]" />
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_232">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">0</InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="supplement name" sap2010:WorkflowViewState.IdRef="While_7" Condition="[vendorCount&lt;dtCapitalPlan.Rows.Count]">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_106">
            <If Condition="[string.IsNullOrEmpty(dtCapitalPlan.Rows(vendorCount)(nameVendorCodeHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_74">
              <If.Then>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_233">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[dtCapitalPlan.Rows(vendorCount)(nameVendorCodeHeader)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[newName]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_234">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dtCapitalPlan.Rows(vendorCount)(nameVendorCodeHeader).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <If Condition="[string.IsNullOrEmpty(dtCapitalPlan.Rows(vendorCount)(nameVendorNameHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_79">
              <If.Then>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_245">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[dtCapitalPlan.Rows(vendorCount)(nameVendorNameHeader)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[newName1]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_246">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[newName1]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dtCapitalPlan.Rows(vendorCount)(nameVendorNameHeader).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_241">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[vendorCount+1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </While>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_242">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[dtCapitalPlan.Rows.Count]</InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="RemoveNull" sap2010:WorkflowViewState.IdRef="While_8" Condition="[vendorCount&gt;0]">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_108">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_243">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[vendorCount-1]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[dtCapitalPlan.Rows(vendorCount)(nameReferenceHeader).ToString.Equals(&quot;&quot;)]" sap2010:WorkflowViewState.IdRef="If_78">
              <If.Then>
                <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_27" MethodName="RemoveAt">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="sd:DataRowCollection">[dtCapitalPlan.Rows]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="x:Int32">[vendorCount]</InArgument>
                </InvokeMethod>
              </If.Then>
            </If>
          </Sequence>
        </While>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dtVendorList]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dtCapitalPlan.DefaultView.ToTable(True,nameVendorCodeHeader,nameVendorNameHeader)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dtVendorListNew]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dtVendorList]</InArgument>
          </Assign.Value>
        </Assign>
        <Sequence DisplayName="AddColumns" sap2010:WorkflowViewState.IdRef="Sequence_33">
          <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:DataColumnCollection">[dtVendorListNew.Columns]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="x:String">[nameCashPaymentHeader]</InArgument>
          </InvokeMethod>
          <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:DataColumnCollection">[dtVendorListNew.Columns]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="x:String">[nameBillsPaymentHeader]</InArgument>
          </InvokeMethod>
          <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Add">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:DataColumnCollection">[dtVendorListNew.Columns]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="x:String">[nameLoanPaymentHeader]</InArgument>
          </InvokeMethod>
          <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Add">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:DataColumnCollection">[dtVendorListNew.Columns]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="x:String">[namePenaltyHeader]</InArgument>
          </InvokeMethod>
        </Sequence>
        <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[dtVendorList.Rows]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
              </ActivityAction.Argument>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_32">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[dblCashPayment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[dblBillsPayment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[dblLoanPayment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_60">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[dblPenalty]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">0</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="ReadAmount" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[dtCapitalPlan.Rows]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <If Condition="[item(nameVendorCodeHeader).ToString.Equals(row(nameVendorCodeHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_38">
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_64">
                            <If Condition="[string.IsNullOrEmpty(row(nameCashPaymentHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_33">
                              <If.Else>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_139">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[dblCashPayment]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[cdbl(row(nameCashPaymentHeader))+dblCashPayment]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                            <If Condition="[string.IsNullOrEmpty(row(nameBillsPaymentHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_34">
                              <If.Else>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_140">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[dblBillsPayment]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[cdbl(row(nameBillsPaymentHeader))+dblBillsPayment]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                            <If Condition="[string.IsNullOrEmpty(row(nameLoanPaymentHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_35">
                              <If.Else>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_136">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[dblLoanPayment]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[cdbl(row(nameLoanPaymentHeader))+dblLoanPayment]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                            <If Condition="[string.IsNullOrEmpty(row(namePenaltyHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_37">
                              <If.Else>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_138">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[dblPenalty]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[cdbl(row(namePenaltyHeader))+dblPenalty]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="AddToDatatable" sap2010:WorkflowViewState.IdRef="ForEach`1_19" Values="[dtVendorListNew.Rows]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="itemnew" />
                      </ActivityAction.Argument>
                      <If Condition="[itemnew(nameVendorCodeHeader).ToString.Equals(item(nameVendorCodeHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_39">
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_65">
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_141">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[itemnew(nameCashPaymentHeader)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[dblCashPayment.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_142">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[itemnew(nameBillsPaymentHeader)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[dblBillsPayment.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_143">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[itemnew(nameLoanPaymentHeader)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[dblLoanPayment.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_145">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[itemnew(namePenaltyHeader)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[dblPenalty.ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:Break sap2010:WorkflowViewState.IdRef="Break_3" />
                          </Sequence>
                        </If.Then>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_146">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[dtVendorListNew.Rows.Count]</InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="RemoveNull" sap2010:WorkflowViewState.IdRef="While_1" Condition="[vendorCount&gt;0]">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_66">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_147">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[vendorCount-1]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[dtVendorListNew.Rows(vendorCount)(nameVendorCodeHeader).ToString.Equals(&quot;&quot;)]" sap2010:WorkflowViewState.IdRef="If_41">
              <If.Then>
                <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="RemoveAt">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="sd:DataRowCollection">[dtVendorListNew.Rows]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="x:Int32">[vendorCount]</InArgument>
                </InvokeMethod>
              </If.Then>
            </If>
          </Sequence>
        </While>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_149">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[dtVendorListNew.Rows.Count]</InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="RemoveZero" sap2010:WorkflowViewState.IdRef="While_2" Condition="[vendorCount&gt;0]">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_69">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_150">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[vendorCount-1]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[cdbl(dtVendorListNew.Rows(vendorCount)(nameCashPaymentHeader)).Equals(0) and cdbl(dtVendorListNew.Rows(vendorCount)(nameBillsPaymentHeader)).Equals(0) and cdbl(dtVendorListNew.Rows(vendorCount)(nameLoanPaymentHeader)).Equals(0) and cdbl(dtVendorListNew.Rows(vendorCount)(namePenaltyHeader)).Equals(0)]" sap2010:WorkflowViewState.IdRef="If_42">
              <If.Then>
                <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_26" MethodName="RemoveAt">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="sd:DataRowCollection">[dtVendorListNew.Rows]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="x:Int32">[vendorCount]</InArgument>
                </InvokeMethod>
              </If.Then>
            </If>
          </Sequence>
        </While>
        <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;待付款供应商个数----&gt;&quot;+dtVendorListNew.Rows.Count.ToString]" />
        <Assign sap2010:WorkflowViewState.IdRef="Assign_152">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dtPAList]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dtCapitalPlan]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_172">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[dtPAList.Rows.Count]</InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="RemoveNo" sap2010:WorkflowViewState.IdRef="While_3" Condition="[vendorCount&gt;0]">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_77">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_171">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[vendorCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[vendorCount-1]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[dtPAList.Rows(vendorCount)(nameStatusHeader).ToString.Equals(&quot;否&quot;) or string.IsNullOrEmpty(dtPAList.Rows(vendorCount)(nameStatusHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_51">
              <If.Then>
                <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_23" MethodName="RemoveAt">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="sd:DataRowCollection">[dtPAList.Rows]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="x:Int32">[vendorCount]</InArgument>
                </InvokeMethod>
              </If.Then>
            </If>
          </Sequence>
        </While>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_173">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dtPAListNew]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dtPAList.DefaultView.ToTable(False,nameVendorCodeHeader,nameVendorNameHeader,nameReferenceHeader,nameAmountHeader,namePenaltyHeader,nameNetentionAmountHeader)]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:OutputDataTable DataTable="[dtPAListNew]" DisplayName="Output data table" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[qwe]" />
        <ui:CommentOut DisplayName="Comment out">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities">
              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[qwe]" TopMost="True" />
              <sap2010:WorkflowViewState.IdRef>Sequence_109</sap2010:WorkflowViewState.IdRef>
            </Sequence>
          </ui:CommentOut.Body>
          <sap2010:WorkflowViewState.IdRef>CommentOut_1</sap2010:WorkflowViewState.IdRef>
        </ui:CommentOut>
        <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_24" MethodName="Add">
          <InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="sd:DataColumnCollection">[dtPAListNew.Columns]</InArgument>
          </InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="x:String">[nameFinalAmount]</InArgument>
        </InvokeMethod>
        <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_33" Values="[dtPAListNew.Rows]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
              </ActivityAction.Argument>
              <If Condition="[string.IsNullOrEmpty(item(namePenaltyHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_55">
                <If.Then>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_175">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[item(nameFinalAmount)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[cdbl(item(nameAmountHeader))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_176">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[item(nameFinalAmount)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[cdbl(item(nameAmountHeader))-cdbl(item(nameNetentionAmountHeader))-cdbl(item(namePenaltyHeader))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_39" Values="[dtPAListNew.Rows]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
              </ActivityAction.Argument>
              <If Condition="[string.IsNullOrEmpty(item(nameNetentionAmountHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_65">
                <If.Else>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_209">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[item(nameFinalAmount)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[cdbl(item(nameAmountHeader))-cdbl(item(nameNetentionAmountHeader))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_36" Values="[dtVendorListNew.Rows]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="itemV" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_83">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_179">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">[totalVendorAmount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">0</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_180">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">[totalPAAmount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">0</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_178">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Double">[totalVendorAmount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Double">[cdbl(itemV(nameCashPaymentHeader))+cdbl(itemV(nameBillsPaymentHeader))+cdbl(itemV(nameLoanPaymentHeader))]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_37" Values="[dtPAListNew.Rows]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="itemPA" />
                      </ActivityAction.Argument>
                      <If Condition="[itemV(nameVendorCodeHeader).ToString.Equals(itemPA(nameVendorCodeHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_61">
                        <If.Then>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_191">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">[totalPAAmount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">[totalPAAmount+cdbl(itemPA(nameFinalAmount))]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <If Condition="[totalPAAmount&gt;totalVendorAmount]" sap2010:WorkflowViewState.IdRef="If_57">
                  <If.Then>
                    <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_38" Values="[dtPAListNew.Rows]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                          </ActivityAction.Argument>
                          <If Condition="[item(nameVendorCodeHeader).ToString.Equals(itemV(nameVendorCodeHeader).ToString)]" sap2010:WorkflowViewState.IdRef="If_58">
                            <If.Then>
                              <If Condition="[cdbl(item(nameFinalAmount))&lt;totalVendorAmount]" sap2010:WorkflowViewState.IdRef="If_62">
                                <If.Then>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_192">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">[totalVendorAmount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">[totalVendorAmount-cdbl(item(nameFinalAmount))]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_89">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_193">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[item(nameFinalAmount)]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[totalVendorAmount]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_194">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Double">[totalVendorAmount]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Double">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Then>
                          </If>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" Visible="False" WorkbookPath="[pathCapitalPlan]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_71">
                <ui:ForEachRow DataTable="[dtVendorListNew]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_88">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_190">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[row(nameVendorCodeHeader)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[row(nameVendorCodeHeader).ToString.Replace(".","&amp;")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <ui:ForEachRow DataTable="[dtPAListNew]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_87">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_189">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[row(nameVendorCodeHeader)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[row(nameVendorCodeHeader).ToString.Replace(".","&amp;")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtVendorListNew]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[nameCapitalPlanSheet+&quot;VendorList&quot;]" StartingCell="A1" />
                <ui:ExcelWriteRange AddHeaders="True" DataTable="[dtPAListNew]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[nameCapitalPlanSheet+&quot;PAList&quot;]" StartingCell="A1" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_199">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[DTVendorListNewArg]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dtVendorListNew]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_200">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[DTPAListNewArg]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[dtPAListNew]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_195">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[successFlag]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_196">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[SuccessFlagArg]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[successFlag]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="4.1CapitalPlanExcel End" />
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_90">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_197">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[successFlag]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_198">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[SuccessFlagArg]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">[successFlag]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;4.1CapitalPlanExcel Error&quot;+exception.ToString]" />
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="843,95" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_244" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_185" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_207" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="243,63" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="843,1601">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="843,168">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_232" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_233" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_234" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_74" sap:VirtualizedContainerService.HintSize="511,214" />
      <sap2010:ViewStateData Id="Assign_245" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_246" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_79" sap:VirtualizedContainerService.HintSize="511,214" />
      <sap2010:ViewStateData Id="Assign_241" sap:VirtualizedContainerService.HintSize="511,61" />
      <sap2010:ViewStateData Id="Sequence_106" sap:VirtualizedContainerService.HintSize="533,693">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_7" sap:VirtualizedContainerService.HintSize="843,856">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_242" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_243" sap:VirtualizedContainerService.HintSize="464,61" />
      <sap2010:ViewStateData Id="InvokeMethod_27" sap:VirtualizedContainerService.HintSize="225,137" />
      <sap2010:ViewStateData Id="If_78" sap:VirtualizedContainerService.HintSize="464,290" />
      <sap2010:ViewStateData Id="Sequence_108" sap:VirtualizedContainerService.HintSize="486,515">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_8" sap:VirtualizedContainerService.HintSize="843,678">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="InvokeMethod_7" sap:VirtualizedContainerService.HintSize="225,137" />
      <sap2010:ViewStateData Id="InvokeMethod_8" sap:VirtualizedContainerService.HintSize="225,137" />
      <sap2010:ViewStateData Id="InvokeMethod_9" sap:VirtualizedContainerService.HintSize="225,137" />
      <sap2010:ViewStateData Id="InvokeMethod_11" sap:VirtualizedContainerService.HintSize="225,137" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="843,792">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="630,488">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_139" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_33" sap:VirtualizedContainerService.HintSize="464,214" />
      <sap2010:ViewStateData Id="Assign_140" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_34" sap:VirtualizedContainerService.HintSize="464,214" />
      <sap2010:ViewStateData Id="Assign_136" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_35" sap:VirtualizedContainerService.HintSize="464,214" />
      <sap2010:ViewStateData Id="Assign_138" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_37" sap:VirtualizedContainerService.HintSize="464,214" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="486,1100">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_38" sap:VirtualizedContainerService.HintSize="614,1253">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_18" sap:VirtualizedContainerService.HintSize="630,1390">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_141" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_142" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_143" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_145" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="243,22" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="265,550">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_39" sap:VirtualizedContainerService.HintSize="464,703">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_19" sap:VirtualizedContainerService.HintSize="630,840">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="652,2922">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_20" sap:VirtualizedContainerService.HintSize="843,3059" />
      <sap2010:ViewStateData Id="Assign_146" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_147" sap:VirtualizedContainerService.HintSize="464,61" />
      <sap2010:ViewStateData Id="InvokeMethod_12" sap:VirtualizedContainerService.HintSize="225,137" />
      <sap2010:ViewStateData Id="If_41" sap:VirtualizedContainerService.HintSize="464,290" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="486,515">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="843,678">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_149" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_150" sap:VirtualizedContainerService.HintSize="464,61" />
      <sap2010:ViewStateData Id="InvokeMethod_26" sap:VirtualizedContainerService.HintSize="225,137" />
      <sap2010:ViewStateData Id="If_42" sap:VirtualizedContainerService.HintSize="464,290" />
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="486,515">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="843,678" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="843,63" />
      <sap2010:ViewStateData Id="Assign_152" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_172" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_171" sap:VirtualizedContainerService.HintSize="464,61" />
      <sap2010:ViewStateData Id="InvokeMethod_23" sap:VirtualizedContainerService.HintSize="225,137" />
      <sap2010:ViewStateData Id="If_51" sap:VirtualizedContainerService.HintSize="464,290" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="486,515">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_3" sap:VirtualizedContainerService.HintSize="843,678" />
      <sap2010:ViewStateData Id="Assign_173" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="OutputDataTable_1" sap:VirtualizedContainerService.HintSize="843,22" />
      <sap2010:ViewStateData Id="MessageBox_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_109" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="843,53">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_24" sap:VirtualizedContainerService.HintSize="843,137" />
      <sap2010:ViewStateData Id="Assign_175" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_176" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_55" sap:VirtualizedContainerService.HintSize="511,214" />
      <sap2010:ViewStateData Id="ForEach`1_33" sap:VirtualizedContainerService.HintSize="843,351">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_209" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_65" sap:VirtualizedContainerService.HintSize="464,214" />
      <sap2010:ViewStateData Id="ForEach`1_39" sap:VirtualizedContainerService.HintSize="843,351">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_179" sap:VirtualizedContainerService.HintSize="805,61" />
      <sap2010:ViewStateData Id="Assign_180" sap:VirtualizedContainerService.HintSize="805,61" />
      <sap2010:ViewStateData Id="Assign_178" sap:VirtualizedContainerService.HintSize="805,61" />
      <sap2010:ViewStateData Id="Assign_191" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="If_61" sap:VirtualizedContainerService.HintSize="464,214" />
      <sap2010:ViewStateData Id="ForEach`1_37" sap:VirtualizedContainerService.HintSize="805,351" />
      <sap2010:ViewStateData Id="Assign_192" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_193" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Assign_194" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="265,286">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_62" sap:VirtualizedContainerService.HintSize="533,439" />
      <sap2010:ViewStateData Id="If_58" sap:VirtualizedContainerService.HintSize="661,592" />
      <sap2010:ViewStateData Id="ForEach`1_38" sap:VirtualizedContainerService.HintSize="677,729">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_57" sap:VirtualizedContainerService.HintSize="805,882" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="827,1700">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_36" sap:VirtualizedContainerService.HintSize="843,1837" />
      <sap2010:ViewStateData Id="Assign_190" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="265,185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="314,334" />
      <sap2010:ViewStateData Id="Assign_189" sap:VirtualizedContainerService.HintSize="243,61" />
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="265,185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="314,334" />
      <sap2010:ViewStateData Id="ExcelWriteRange_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="336,1086">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_4" sap:VirtualizedContainerService.HintSize="843,1195" />
      <sap2010:ViewStateData Id="Assign_199" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_200" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_195" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="Assign_196" sap:VirtualizedContainerService.HintSize="843,61" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="843,95" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="865,15544">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_197" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="Assign_198" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,95" />
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="336,421">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="869,492">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="883,16354" />
      <sap2010:ViewStateData Id="CapitalPanExcel_1" sap:VirtualizedContainerService.HintSize="923,16434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>